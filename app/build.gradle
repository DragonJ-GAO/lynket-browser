apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://maven.google.com' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.5'
    }
}
repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "arun.com.chromer"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 35
        versionName "1.7.2"

        buildConfigField "String", "BASE_64", getBase64()
        manifestPlaceholders = [crashlyticsApiKey: getFabricKey()]

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "Chromer"

            lintOptions {
                disable 'MissingTranslation'
            }
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '- dev'
            resValue "string", "app_name", "Chromer-dev"
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    // Debugging
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'

    // Dependency Injection
    implementation 'com.google.dagger:dagger:2.11'
    kapt 'com.google.dagger:dagger-compiler:2.11'

    // Support
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:customtabs:26.1.0'
    implementation 'com.android.support:preference-v14:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.android.support:palette-v7:26.1.0'

    // Architecture Components
    implementation 'android.arch.lifecycle:extensions:1.0.0'
    kapt 'android.arch.lifecycle:compiler:1.0.0'

    // Suggestions
    implementation 'in.arunkumarsampath:suggestions:1.0.1'

    // Intro
    implementation 'com.github.paolorotolo:appintro:4.1.0'

    // Icons
    implementation 'com.mikepenz:community-material-typeface:1.9.32.1@aar'

    // Drawer
    implementation('com.mikepenz:materialdrawer:5.3.6@aar') {
        transitive = true
    }

    // Dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.4.2'
    implementation 'com.afollestad.material-dialogs:commons:0.9.4.5'

    // Butterknife, Timber
    implementation 'com.jakewharton.timber:timber:4.6.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'

    // MVP
    implementation 'com.hannesdorfmann.mosby3:mvp:3.0.4'

    // Image loading
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    // Bottom sheet
    implementation 'com.flipboard:bottomsheet-core:1.5.1'
    implementation 'com.flipboard:bottomsheet-commons:1.5.1'

    // Animations
    implementation 'com.facebook.rebound:rebound:0.3.8'

    // Badge
    implementation 'com.github.nekocode:Badge:1.2'

    // Reactive
    implementation 'io.reactivex:rxjava:1.3.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.jakewharton.rxbinding:rxbinding:1.0.1'

    // Extraction
    implementation 'com.github.chimbori:crux:-SNAPSHOT'

    // Storage
    implementation 'io.paperdb:paperdb:2.6'

    implementation('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true
    }
    implementation project(path: ':article-view')
}

static def getBase64() {
    try {
        Properties properties = new Properties()
        properties.load(new FileInputStream("values.properties"))
        return "\"" + properties.getProperty("BASE_64") + "\""
    } catch (Exception ignored) {
        return "\"\""
    }
}

static def getFabricKey() {
    try {
        Properties properties = new Properties()
        properties.load(new FileInputStream("values.properties"))
        return properties.getProperty("FABRIC_KEY")
    } catch (Exception ignored) {
        return "\"\""
    }
}